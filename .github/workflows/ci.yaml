on: [push, pull_request]

name: CI

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: apcu
      - name: PHP-CS-Fixer
        uses: OskarStark/php-cs-fixer-ga@3.25.0
        with:
          args: --diff --dry-run --allow-risky yes --stop-on-violation --using-cache=no --path-mode=intersection

  phpstan:
    name: PHPStan Static Analysis
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: apcu
      - name: Composer
        run: composer install
      - name: phpstan
        run: |
          ./vendor/bin/phpstan analyse --level 6 src

  phpunit:
    runs-on: ubuntu-22.04
    name: Unit tests

    services:
      db:
        image: demostf/db
        env:
          POSTGRES_PASSWORD: test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: apcu
      - name: Composer
        run: composer install
      - name: PHPUnit Tests
        env:
          DB_PORT: 5432
          DB_TYPE: pgsql
          DB_HOST: localhost
          DB_USERNAME: postgres
          DB_PASSWORD: test
          DB_DATABASE: postgres
        run: |
          php ./vendor/bin/phpunit test

  api:
    runs-on: ubuntu-22.04
    name: Integration tests

    services:
      db:
        image: demostf/db
        env:
          POSTGRES_PASSWORD: test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
      api:
        image: demostf/api
        env:
          BASE_HOST: localhost
          DEMO_ROOT: /tmp
          DEMO_HOST: localhost
          DB_TYPE: pgsql
          DB_HOST: db
          DB_PORT: 5432
          DB_DATABASE: postgres
          DB_USERNAME: postgres
          DB_PASSWORD: test
          APP_ROOT: https://localhost
          EDIT_SECRET: edit
        volumes:
          - src:/app
      nginx:
        image: demostf/api-nginx-test
        ports:
          - 80:80

    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: apcu
      - name: Composer
        run: composer install
      - name: copy code
        run: |
          docker run -v src:/data --name helper busybox true
          docker cp src helper:/data/
          docker cp vendor helper:/data/
          docker rm helper
      - env:
          DB_URL: postgres://postgres:test@db:5432/postgres
          BASE_URL: http://nginx
          EDIT_KEY: edit
        uses: docker://demostf/api-test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - uses: icewind1991/attic-action@v1
        with:
          name: ci
          instance: https://cache.icewind.me
          authToken: '${{ secrets.ATTIC_TOKEN }}'
      - run: nix build

  docker:
    runs-on: ubuntu-latest
    needs: [build, api, phpunit]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - uses: icewind1991/attic-action@v1
        with:
          name: ci
          instance: https://cache.icewind.me
          authToken: '${{ secrets.ATTIC_TOKEN }}'
      - run: nix build .#docker
      - name: Push image
        if: github.ref == 'refs/heads/master'
        run: |
          skopeo copy --dest-creds="${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_TOKEN }}" "docker-archive:$(nix build .#docker --print-out-paths)" "docker://demostf/api"
